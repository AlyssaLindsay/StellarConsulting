@inherits LayoutComponentBase

<div class="page">
    <main>
        <!-- Top navigation bar -->
        <div class="top-row px-4" style="display: flex; justify-content: space-between; align-items: center;">
            <!-- Left: logo -->
            <div>
                <img src="images/login-title.png" alt="Login Logo" style="height: 40px; max-width: 200px;" />
            </div>

            <!-- Right: avatar dropdown -->
            <div class="dropdown">
                <div class="avatar rounded-circle dropdown-toggle d-flex justify-content-center align-items-center text-white"
                     id="avatarDropdown"
                     data-bs-toggle="dropdown"
                     aria-expanded="false"
                     style="width: 40px; height: 40px; background-color: @AvatarColor; cursor: pointer;">
                    @AvatarInitials
                </div>

                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="avatarDropdown">
                    <li><a class="dropdown-item" href="#">Profile</a></li>
                    <li><a class="dropdown-item" href="#">Settings</a></li>
                    <li><hr class="dropdown-divider" /></li>
                    <li><a class="dropdown-item" href="#">Logout</a></li>
                </ul>
            </div>
        </div>

        <!-- Page content -->
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<!-- Error message area -->
<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private string Username = "Eric Idle";
    private string AvatarInitials;
    private string AvatarColor;

    protected override void OnInitialized()
    {
        AvatarInitials = GetInitials(Username);
        AvatarColor = "#7E57C2";
    }

    private string GetInitials(string name)
    {
        if (string.IsNullOrWhiteSpace(name))
            return "?";

        var parts = name.Trim().Split(' ', StringSplitOptions.RemoveEmptyEntries);

        if (parts.Length == 1)
            return parts[0].Substring(0, 1).ToUpper();

        return (parts[0].Substring(0, 1) + parts[1].Substring(0, 1)).ToUpper();
    }
}
